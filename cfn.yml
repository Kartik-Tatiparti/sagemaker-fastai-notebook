Description: "Creates resources to run the fast.ai MOOC on a SageMaker notebook instance"
Parameters:

  FastaiVersion:
    Type: "String"
    Default: "0.7"
    AllowedValues: [ "0.7", "1.0" ]
    Description: "Enter the value of the fast.ai library version (0.7 or 1.0). Default is 0.7"

  NotebookInstanceType:
    Type: "String"
    Default: ml.p3.2xlarge
    AllowedValues:
      - ml.t2.medium
      - ml.t2.large
      - ml.t2.xlarge
      - ml.t2.2xlarge
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.p2.xlarge
      - ml.p3.2xlarge
    Description: Enter a valid SageMaker notebook instance type. Defaults to ml.p3.2xlarge.

  NotificationEmail:
    Type: "String"
    AllowedPattern: "^([\\w-\\.]+){1,64}@([\\w&&[^_]]+){2,255}.[a-z]{2,}$"
    Description: Enter a valid email address to get notified when the notebook instance is setup and ready for use.
    ConstraintDescription: Must be a valid email address

Conditions:
  LatestVersion: !Equals [ !Ref FastaiVersion, "1.0"]

Resources:

  NotebookEnvNotificationTopic:
    Type: AWS::SNS::Topic
    Properties: 
      Subscription:
      - Endpoint: !Ref NotificationEmail
        Protocol: email

  SageMakerIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies: 
        - 
          PolicyName: "root"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: "sns:Publish"
                Resource: !Ref NotebookEnvNotificationTopic      
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
      
  NotebookLifecycleConfig:
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties:
      OnCreate:
        - Content:
            Fn::Base64: 
              !Sub |
                #!/bin/bash
                set -xe
                sudo -i -u ec2-user bash <<\EOF
                fastaiVersion="${FastaiVersion}"
                if [[ "${!fastaiVersion}" == "0.7" ]]; then
                  echo "Clone fast.ai for v2 course"
                  git clone https://github.com/fastai/fastai /home/ec2-user/SageMaker/fastai
                  mkdir /home/ec2-user/SageMaker/fastai/courses/dl1/data
                  ln -s /home/ec2-user/SageMaker/fastai/courses /home/ec2-user/SageMaker/fastai-course-v2
                else
                  echo "Clone fast.ai for v3 course"
                  git clone https://github.com/fastai/course-v3 /home/ec2-user/SageMaker/fastai-course-v3
                fi
                EOF

      OnStart:
        - Content:
            Fn::Base64:
              !Sub |            
                #!/bin/bash
                set -xe
                cat > /home/ec2-user/fastai-setup.sh <<\EOF1
                #!/bin/bash
                set -xe
                instancetype=$(curl -s http://169.254.169.254/latest/meta-data/instance-type)
                fastaiVersion="${FastaiVersion}"
                emailAddress="${NotificationEmail}"
                snsTopic="${NotebookEnvNotificationTopic}"
                if [[ "${!fastaiVersion}" == "0.7" ]] ; then  
                  echo "Setting up for fast.ai version 0.7"              
                  cd /home/ec2-user/SageMaker/fastai
                  echo "Creating fast.ai conda enviornment"
                  if [[ "${!instancetype}" == p2* ]] || [[ "${!instancetype}" == p3* ]] ; then
                    echo "Installing GPU based fastai environment"
                    conda env create -f environment.yml
                  else
                    echo "Installing CPU based fastai environment"
                    conda env create -f environment-cpu.yml
                  fi
                else
                  echo "Setting up for fast.ai version 1.0" 
                  if [[ "${!instancetype}" == p2* ]] || [[ "${!instancetype}" == p3* ]] ; then
                    echo "Installing GPU based PyTorch environment"
                    conda create -mqyp envs/fastai -c pytorch -c fastai python=3.7 pytorch-nightly fastai cuda90 torchvision-nightly
                  else
                    echo "Installing CPU based PyTorch environment"
                    conda create -mqyp envs/fastai -c pytorch -c fastai python=3.7 pytorch-nightly-cpu fastai torchvision-nightly-cpu
                  fi
                  echo "Installing ipython kernel"
                  source activate envs/fastai
                  ipython kernel install --name 'fastai' --display-name 'Python 3' --user
                fi
                echo "Finished creating fast.ai conda environment"    

                echo "Getting the SageMaker notebook presigned URL"
                nbname=$([ "${!fastaiVersion}" == "1.0" ] && echo "FastaiCourseV3Notebook" || echo "FastaiCourseV2Notebook")
                echo "Notebook name is ${!nbname}"
                longurl=$(aws sagemaker create-presigned-notebook-instance-url \
                  --notebook-instance-name ${!nbname} \
                  --region "${AWS::Region}" --output text --query "AuthorizedUrl")
                echo "Long URL is ${!longurl}"

                echo "Shortening URL"
                url=$(curl -s http://tinyurl.com/api-create.php?url=${!longurl})
                echo "Short URL is ${!url}"

                cat > /tmp/message.txt <<EOF2
                Your SageMaker notebook instance has the fastai conda enviornment setup correctly.

                To access it, click on the following link: ${!url}
                EOF2

                echo "Sending SNS topic notification"
                aws sns publish --topic-arn "${!snsTopic}" --subject "SageMaker Notebook instance now ready" \
                  --region "${AWS::Region}" \
                  --message file:///tmp/message.txt
                echo "Finished setting up notebook instance"
                EOF1

                chown ec2-user:ec2-user /home/ec2-user/fastai-setup.sh
                chmod 755 /home/ec2-user/fastai-setup.sh

                sudo -i -u ec2-user bash << EOF
                echo "Creating fast.ai conda env in background process."
                nohup /home/ec2-user/fastai-setup.sh &
                EOF

  SageMakerNotebookInstance:
    Type: "AWS::SageMaker::NotebookInstance"
    Properties:
      NotebookInstanceName: !If [LatestVersion, "FastaiCourseV3Notebook", "FastaiCourseV2Notebook"]
      InstanceType: !Ref NotebookInstanceType
      RoleArn: !GetAtt SageMakerIamRole.Arn
      LifecycleConfigName: !GetAtt NotebookLifecycleConfig.NotebookInstanceLifecycleConfigName

Outputs:
  SageMakerNotebookInstance:
    Value: !GetAtt SageMakerNotebookInstance.NotebookInstanceName
  IAMRole:
    Value: !GetAtt SageMakerIamRole.Arn
